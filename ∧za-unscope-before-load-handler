#!/usr/bin/env zsh
# -*- mode: sh; sh-indentation: 4; indent-tabs-mode: nil; sh-basic-offset: 4; -*-

# Copyright (c) 2020 Sebastian Gniazdowski

âˆ§za-unscope-before-load-handler() {

    # Set the base and typically useful options.
    builtin emulate -LR zsh
    builtin setopt extendedglob warncreateglobal typesetsilent noshortloops rcquotes

    local type=$1 id=$2 id_as=$3 hook=$4 subtype=$5

    [[ $id == */* || $ZINIT_ICE[teleid] == */* ]] && {
        (( $+ZINIT_ICE[debug] )) && \
            +zinit-message "{pre}unscope annex: {msg}Skipping the ID: {meta}$id{msg}.{rst}"
        return 0
    }

    local -a match mbegin mend
    local MATCH
    integer MBEGIN MEND

    local -A tpe_map
    tpe_map=( 0 plugin 1 snippet )

    local new_teleid_data=${(v)ZINIT_ANNEX_UNSCOPE_MAPPINGS[(i)<->. ##$___id]}
    if [[ -z $new_teleid_data ]] {
        if .zinit-get-object-path plugin "${${___id#@}%%(///|//|/)}"; then
            { new_teleid_data="$(<$reply[1]/._zinit/dynamic-unscope)" } 2>/dev/null
        elif .zinit-get-object-path snippet "${${___id#@}%%(///|//|/)}"; then
            { new_teleid_data="$(<$reply[1]/$reply[2]/._zinit/dynamic-unscope)" } 2>/dev/null
        elif .za-unscope-dynamic $___id; then
            new_teleid_data=$REPLY
        fi
    }
    if [[ -n $new_teleid_data ]] {
        local -a object_data
        object_data=( "${(@Q)${(@z)new_teleid_data}}" )

        # Overwrite the outside parameters in order
        # to introduce the actual object's ID.
        ZINIT_ICE[id-as]=${id_as:-$___id}
        ___id=$object_data[1]
        ZINIT_ICE[teleid]=$object_data[1]

        # Test if we're being called from the
        # object-load context.
        if [[ $subtype == load ]] {
            # Possibly change the object type.
            ___is_snippet=$object_data[2]
        }

        # Debug message.
        (( $+ZINIT_ICE[debug] )) && \
            +zinit-message "{pre}unscope annex: {msg}Matched the following" \
                "$tpe_map[$object_data[2]]: {url}$ZINIT_ICE[teleid]{rst}"
    }

    return 0
}

# vim:ft=zsh:tw=80:sw=4:sts=4:et
